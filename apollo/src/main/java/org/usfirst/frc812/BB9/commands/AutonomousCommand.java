// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc812.BB9.commands;

import org.usfirst.frc812.BB9.RobotMap;
import org.usfirst.frc812.BB9.subsystems.DrivelineSubsystem;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc812.BB9.Robot;


/**
 *
 */
public class AutonomousCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonomousCommand() {
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
    }
 
    protected void initialize() {
    	System.out.println("AutonomousCommmand initialize() activated");

		
	// time out in 15 seconds, making isFinished() return true
	// this timeout is for overall safety purposes to ensure that autonomous mode exits
	// regardless of what we actually do in autonomous mode.

    	this.setTimeout(15);
    	Robot.runOnce = true;
	// Robot.drivelineSubsystem.rightEnc.reset();
	// DrivelineSubsystem.leftEnc.reset();
	// How long is it to drive in autonomous?
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	boolean testMode = false;
    	
    	if( Robot.runOnce ) {
	    	System.out.println("AutonomousCommmand execute() activated");
	    	
	    	testMode = true;

	    	if( testMode ) {
		    	AutonomousCommandGroupTest autoCmdGroupTest;
		    	autoCmdGroupTest = new AutonomousCommandGroupTest();
		      	if(autoCmdGroupTest != null) {
		    		autoCmdGroupTest.start();
		    		this.end();
		      	}
	    	} else {
	    		
	    		AutonomousCommandGroup autoCmdGroup;	    	
	    		autoCmdGroup =new AutonomousCommandGroup();
	     		if(autoCmdGroup != null) {
	    			autoCmdGroup.start();
	    			this.end();
	    		}
	    	}
	    }
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	return isTimedOut();
    	
    }

    // Called once after isFinished returns true
    protected void end() {
    	RobotMap.dtMecanumDrive.stopMotor();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}